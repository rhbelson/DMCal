{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/@ionic-native/plugins/background-mode/index.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Cordova, IonicNativePlugin, Plugin } from '@ionic-native/core';\nimport { Observable } from 'rxjs/Observable';\n\n/**\n * Configurations items that can be updated.\n */\nexport interface BackgroundModeConfiguration {\n  /**\n   * Title of the background task\n   */\n  title?: string;\n\n  /**\n   * Description of background task\n   */\n  text?: string;\n\n  /**\n   * This will look for `<icon name>.png` in platforms/android/res/drawable|mipmap\n   */\n  icon?: string;\n\n  /**\n   * Set the background color of the notification circle\n   */\n  color?: string;\n\n  /**\n   * By default the app will come to foreground when tapping on the notification. If false, plugin won't come to foreground when tapped.\n   */\n  resume?: boolean;\n\n  /**\n   * When set to false makes the notifications visible on lock screen (Android 5.0+)\n   */\n  hidden?: boolean;\n\n  /** Big text */\n  bigText?: boolean;\n\n  /**\n   * The text that scrolls itself on statusbar\n   */\n  ticker?: string;\n\n  /**\n   * if true plugin will not display a notification. Default is false.\n   */\n  silent?: boolean;\n}\n\n/**\n * @name Background Mode\n * @description\n * Cordova plugin to prevent the app from going to sleep while in background.\n * Requires Cordova plugin: cordova-plugin-background-mode. For more info about plugin, visit: https://github.com/katzer/cordova-plugin-background-mode\n * @usage\n * ```typescript\n * import { BackgroundMode } from '@ionic-native/background-mode';\n *\n * constructor(private backgroundMode: BackgroundMode) { }\n *\n * ...\n *\n * this.backgroundMode.enable();\n * ```\n *\n * @interfaces\n * BackgroundModeConfiguration\n */\n@Plugin({\n  pluginName: 'BackgroundMode',\n  plugin: 'cordova-plugin-background-mode',\n  pluginRef: 'cordova.plugins.backgroundMode',\n  repo: 'https://github.com/katzer/cordova-plugin-background-mode',\n  platforms: ['AmazonFire OS', 'Android', 'Browser', 'iOS', 'Windows']\n})\n@Injectable()\nexport class BackgroundMode extends IonicNativePlugin {\n  /**\n   * Enable the background mode.\n   * Once called, prevents the app from being paused while in background.\n   */\n  @Cordova({\n    sync: true\n  })\n  enable(): void {}\n\n  /**\n   * Disable the background mode.\n   * Once the background mode has been disabled, the app will be paused when in background.\n   */\n  @Cordova()\n  disable(): Promise<any> {\n    return;\n  }\n\n  /**\n   * Checks if background mode is enabled or not.\n   * @returns {boolean} returns a boolean that indicates if the background mode is enabled.\n   */\n  @Cordova({\n    sync: true\n  })\n  isEnabled(): boolean {\n    return;\n  }\n\n  /**\n   * Can be used to get the information if the background mode is active.\n   * @returns {boolean} returns a boolean that indicates if the background mode is active.\n   */\n  @Cordova({\n    sync: true\n  })\n  isActive(): boolean {\n    return;\n  }\n\n  /**\n   * Override the default title, ticker and text.\n   * Available only for Android platform.\n   * @param {BackgroundModeConfiguration} options List of option to configure. See table below\n   * @returns {Promise<any>}\n   */\n  @Cordova({\n    platforms: ['Android']\n  })\n  setDefaults(options?: BackgroundModeConfiguration): Promise<any> {\n    return;\n  }\n\n  /**\n   * Modify the displayed information.\n   * Available only for Android platform.\n   * @param {BackgroundModeConfiguration} [options] Any options you want to update. See table below.\n   */\n  @Cordova({\n    platforms: ['Android'],\n    sync: true\n  })\n  configure(options?: BackgroundModeConfiguration): void {}\n\n  /**\n   * Listen for events that the plugin fires. Available events are `enable`, `disable`, `activate`, `deactivate` and `failure`.\n   * @param event {string} Event name\n   * @returns {Observable<any>}\n   */\n  @Cordova({\n    observable: true,\n    clearFunction: 'un',\n    clearWithArgs: true\n  })\n  on(event: string): Observable<any> {\n    return;\n  }\n\n  /**\n   * Android allows to programmatically move from foreground to background.\n   */\n  @Cordova({\n    platforms: ['Android'],\n    sync: true\n  })\n  moveToBackground(): void {}\n\n  /**\n   * Enable GPS-tracking in background (Android).\n   */\n  @Cordova({\n    platforms: ['Android'],\n    sync: true\n  })\n  disableWebViewOptimizations(): void {}\n\n  /**\n   * Android allows to programmatically move from background to foreground.\n   */\n  @Cordova({\n    platforms: ['Android'],\n    sync: true\n  })\n  moveToForeground(): void {}\n\n  /**\n   * Override the back button on Android to go to background instead of closing the app.\n   */\n  @Cordova({\n    platforms: ['Android'],\n    sync: true\n  })\n  overrideBackButton(): void {}\n\n  /**\n   * Exclude the app from the recent task list. Works on Android 5.0+.\n   */\n  @Cordova({\n    platforms: ['Android'],\n    sync: true\n  })\n  excludeFromTaskList(): void {}\n\n  /**\n   * The method works async instead of isActive() or isEnabled().\n   * @returns {Promise<boolean>}\n   */\n  @Cordova({\n    platforms: ['Android']\n  })\n  isScreenOff(): Promise<boolean> {\n    return;\n  }\n\n  /**\n   * Turn screen on\n   */\n  @Cordova({\n    platforms: ['Android'],\n    sync: true\n  })\n  wakeUp(): void {}\n\n  /**\n   * Turn screen on and show app even locked\n   */\n  @Cordova({\n    platforms: ['Android'],\n    sync: true\n  })\n  unlock(): void {}\n}\n"]}